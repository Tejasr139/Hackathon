import React, { useEffect, useState } from 'react';
import axios from 'axios';
import TaskReviewRespond from './TaskReviewRespond';

function MentorDashboard() {
Â  const [mentees, setMentees] = useState([]);
Â  const [requests, setRequests] = useState([]);
Â  const [selectedMentee, setSelectedMentee] = useState(null);
Â  const [task, setTask] = useState('');
Â  const [message, setMessage] = useState('');
Â  const [activeTab, setActiveTab] = useState('mentees');

Â  const token = localStorage.getItem("token");
Â  const mentorEmail = localStorage.getItem("email");

Â  useEffect(() => {
Â  Â  if (!token) return;

Â  Â  const fetchMentees = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  const response = await axios.get('http://localhost:8083/api/connection/accepted-mentees', {
            params:{mentorEmail},
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` }
Â  Â  Â  Â  });
Â  Â  Â  Â  setMentees(response.data);
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  console.error('Failed to fetch mentees', err);
Â  Â  Â  }
Â  Â  };

Â  Â  const fetchRequests = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  const response = await axios.get(`http://localhost:8083/api/connection/requests`, {
Â  Â  Â  Â  Â  params: { mentorEmail },
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` }
Â  Â  Â  Â  });
            console.log("Requests fetched for mentor:", response.data);
Â  Â  Â  Â  setRequests(response.data);
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  console.error("Error fetching requests", err);
Â  Â  Â  }
Â  Â  };

Â  Â  fetchMentees();
Â  Â  fetchRequests();
Â  }, [token, mentorEmail]);

Â  const assignTask = async () => {
Â  Â  if (!selectedMentee || !task.trim()) {
Â  Â  Â  setMessage('Please select a mentee and enter a task');
Â  Â  Â  return;
Â  Â  }

Â  Â  try {
Â  Â  Â  await axios.post(
Â  Â  Â  Â  'http://localhost:8083/api/mentor/assign-task',
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  menteeEmail: selectedMentee.email,
Â  Â  Â  Â  Â  task: task.trim()
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` }
Â  Â  Â  Â  }
Â  Â  Â  );
Â  Â  Â  setMessage(`Task assigned to ${selectedMentee.firstName}`);
Â  Â  Â  setTask('');
Â  Â  } catch (err) {
Â  Â  Â  console.error('Failed to assign task', err);
Â  Â  Â  setMessage('Failed to assign task. Please try again.');
Â  Â  }
Â  };

Â  const respondToRequest = async (requestId, action) => {
Â  Â  try {
Â  Â  Â  await axios.post(
Â  Â  Â  Â  `http://localhost:8083/api/connection/respond-request`,
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  requestId,
Â  Â  Â  Â  Â  action
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` }
Â  Â  Â  Â  }
Â  Â  Â  );
Â  Â  Â  setMessage(`Request ${action === 'ACCEPTED' ? 'accepted' : 'rejected'}`);
Â  Â  Â  setRequests(prev => prev.filter(r => r.id !== requestId));
Â  Â  } catch (err) {
Â  Â  Â  console.error("Failed to respond to request", err);
Â  Â  }
Â  };

Â  if (!token) {
Â  Â  return (
Â  Â  Â  <div className="container mt-5">
Â  Â  Â  Â  <h2>Mentor Dashboard</h2>
Â  Â  Â  Â  <div className="alert alert-danger">You are not logged in.</div>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className="d-flex" style={{ minHeight: '100vh' }}>
Â  Â  Â  {/* Sidebar */}
Â  Â  Â  <nav className="bg-dark text-white p-3" style={{ width: '220px', minHeight: '100vh' }}>
Â  Â  Â  Â  <h4 className="mb-4">MentorConnect</h4>
Â  Â  Â  Â  <ul className="nav flex-column">
Â  Â  Â  Â  Â  <li className="nav-item mb-2">
Â  Â  Â  Â  Â  Â  <button className="btn btn-link text-white" onClick={() => setActiveTab('mentees')}>
Â  Â  Â  Â  Â  Â  Â  ðŸ‘¥ Mentees
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  <li className="nav-item mb-2">
Â  Â  Â  Â  Â  Â  <button className="btn btn-link text-white" onClick={() => setActiveTab('requests')}>
Â  Â  Â  Â  Â  Â  Â  ðŸ“© Requests
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </li>

        <li className="nav-item mb-2">
            <button className="btn btn-link text-white" onClick={()=>setActiveTab('review')}>
                Review Tasks
            </button>
        </li>
Â  Â  Â  Â  Â  <li className="nav-item mt-auto">
Â  Â  Â  Â  Â  Â  <a href="/logout" className="nav-link text-white">ðŸ”’ Logout</a>
Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  </ul>
Â  Â  Â  </nav>

Â  Â  Â  {/* Main Content */}
Â  Â  Â  <div className="flex-grow-1">
Â  Â  Â  Â  {/* Navbar */}
Â  Â  Â  Â  <nav className="navbar navbar-expand-lg navbar-light bg-light shadow-sm px-4">
Â  Â  Â  Â  Â  <span className="navbar-brand">Welcome Mentor</span>
Â  Â  Â  Â  </nav>

Â  Â  Â  Â  <div className="container mt-4">
Â  Â  Â  Â  Â  {message && <div className="alert alert-info">{message}</div>}

Â  Â  Â  Â  Â  {activeTab === 'mentees' && (
Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  <h4>ðŸ‘¥ View Mentees</h4>
Â  Â  Â  Â  Â  Â  Â  <ul className="list-group mb-3">
Â  Â  Â  Â  Â  Â  Â  Â  {mentees.map((mentee, index) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <li
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={index}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`list-group-item ${selectedMentee?.email === mentee.email ? 'active' : ''}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setSelectedMentee(mentee)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{ cursor: 'pointer' }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {mentee.firstName} {mentee.lastName} ({mentee.email})
Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </ul>

Â  Â  Â  Â  Â  Â  Â  <h4>Assign Task</h4>
Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  className="form-control mb-2"
Â  Â  Â  Â  Â  Â  Â  Â  rows="3"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter task"
Â  Â  Â  Â  Â  Â  Â  Â  value={task}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setTask(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  <button className="btn btn-primary" onClick={assignTask}>Assign Task</button>
Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  {activeTab === 'requests' && (
Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  <h4>ðŸ“© Connection Requests</h4>
Â  Â  Â  Â  Â  Â  Â  {requests.length === 0 ? (
Â  Â  Â  Â  Â  Â  Â  Â  <p>No new requests.</p>
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <ul className="list-group">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {requests.map((req) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li key={req.id} className="list-group-item d-flex justify-content-between align-items-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {req.mentee.firstName} {req.mentee.lastName} ({req.mentee.email})
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button className="btn btn-sm btn-success me-2" onClick={() => respondToRequest(req.id, 'ACCEPTED')}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Accept
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button className="btn btn-sm btn-danger" onClick={() => respondToRequest(req.id, 'REJECTED')}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Reject
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  )}

            {activeTab === 'review' &&(
                <>
                    <h4> Tasks Awaiting Review</h4>
                    <TaskReviewRespond/>
                </>
            )}




Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
}

export default MentorDashboard;
